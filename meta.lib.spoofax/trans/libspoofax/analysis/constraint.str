module libspoofax/analysis/constraint

// This module defines the interface for a stateful analysis cycle. It supports
// single and multi file analysis.
//
// Single file mode
// ~~~~~~~~~~~~~~~~
//
// Single file analysis treats all files in isolation. To use it, set the following
// in your ESV file:
//
//     observer : ANALYSIS-STRATEGY (constraint)
//
// Multi file mode
// ~~~~~~~~~~~~~~~
//
// Multi file analysis analyses the files in a project together. To use multi
// file mode, set the following in your ESV file:
//
//     observer : ANALYSIS-STRATEGY (constraint) (multifile)
//
// The result of analysis is stored, and can be used in transformations. It can
// be retreived by calling the `get-resource-analysis` strategy. The format of
// the analysis term is completely free.

signature

  constructors // analysis

    AnalyzeSingle  : List(String, Change) -> AnalysisAction
    AnalyzeMulti   : (String, Change) * List(String, Change) -> AnalysisAction

    AnalysisResult : List(String, Result) -> AnalysisResult

  constructors // changes    

    Added   : Term     // ast
           -> Change
    Removed : Term     // analysis
           -> Change
    Changed : Term     // ast
            * Term     // analysis
           -> Change
    Cached  : Term     // analysis
           -> Change

  constructors // results

    Full : Term                   // ast
         * Term                   // analysis
         * List(EditorMessage)    // errors
         * List(EditorMessage)    // warnings
         * List(EditorMessage)    // notes
        -> Result
    Update : Term                   // analysis
           * List(EditorMessage)    // errors
           * List(EditorMessage)    // warnings
           * List(EditorMessage)    // notes
          -> Result
    Failed : Result

  constructors // messages

    : Term      // origin term
    * String    // message
   -> EditorMessage
